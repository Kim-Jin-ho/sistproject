SELECT USER
FROM DUAL;
--> SCOTT

CREATE TABLE TBL_BOARD
( NUM         NUMBER NOT NULL           -- 게시물 번호
, NAME        VARCHAR2(30) NOT NULL     -- 게시물 작성자
, PWD         VARCHAR2(20) NOT NULL     -- 게시물 암호
, EMAIL       VARCHAR2(50)              -- 작성자 이메일
, SUBJECT     VARCHAR2(100) NOT NULL    -- 게시물 제목
, CONTENT     VARCHAR2(4000) NOT NULL   -- 게시물 내용
, IPADDR      VARCHAR2(20)              -- 접속한 클라이언트 IP
, HITCOUNT    NUMBER DEFAULT 0          -- 조회수
, CREATED     DATE DEFAULT SYSDATE      -- 작성일
, CONSTRAINT BOARD_NUM_PK PRIMARY KEY(NUM) -- 게시불 번호에 PK 제약조건 설정
);
-->> 테이블 생성 완료


DESC TBL_BOARD;

--○ 게시물 번호 최대값 조회 쿼리문
SELECT NVL(MAX(NUM),0) AS NUM
FROM TBL_BOARD;
--> 한줄 구성
SELECT NVL(MAX(NUM),0) AS NUM FROM TBL_BOARD;

--○ 게시물 작성(데이터입력) 쿼리문 구성
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(1,'이준환','java003$','lee@class3.com','게시물 작성 테스트'
, '게시물 작성과 관련한 첫 번째 테스트입니다.','127.0.0.1');
--> 한줄 구성
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR) VALUES(1,'이준환','java003$','lee@class3.com','게시물 작성 테스트', '게시물 작성과 관련한 첫 번째 테스트입니다.','127.0.0.1');
-->> 행 삽입 완료

--○ 게시물 갯수 확인 쿼리문 구성
SELECT COUNT(*) AS COUNT
FROM TBL_BOARD;
--> 한줄 구성
SELECT COUNT(*) AS COUNT FROM TBL_BOARD;

--○ 리스트 전체 내용 확인 쿼리문(미완성 쿼리)
SELECT NUM, SUBJECT, NAME, HITCOUNT, TO_CHAR(CREATED) AS CREATED
FROM TBL_BOARD
ORDER BY NUM DESC;
--> 한줄 구성
SELECT NUM, SUBJECT, NAME, HITCOUNT, TO_CHAR(CREATED) AS CREATED FROM TBL_BOARD ORDER BY NUM DESC;

--○ 샘플 데이터 추가입력
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(2,'일준환','java003$','il@class3.com','게시물 작성 테스트1'
, '게시물 작성과 관련한 두 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(3,'삼준환','java003$','sam@class3.com','게시물 작성 테스트3'
, '게시물 작성과 관련한 세 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(4,'사준환','java003$','sa@class3.com','게시물 작성 테스트4'
, '게시물 작성과 관련한 네 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(5,'오준환','java003$','oo@class3.com','게시물 작성 테스트5'
, '게시물 작성과 관련한 다섯 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(6,'육준환','java003$','ouk@class3.com','게시물 작성 테스트6'
, '게시물 작성과 관련한 여섯 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(7,'칠준환','java003$','chil@class3.com','게시물 작성 테스트7'
, '게시물 작성과 관련한 일곱 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(8,'팔준환','java003$','pal@class3.com','게시물 작성 테스트8'
, '게시물 작성과 관련한 여덟 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(9,'구준환','java003$','gu@class3.com','게시물 작성 테스트9'
, '게시물 작성과 관련한 아홉 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(10,'십준환','java003$','sip@class3.com','게시물 작성 테스트10'
, '게시물 작성과 관련한 열 번째 테스트입니다.','127.0.0.1');
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(11,'일영진','java003$','jin@class3.com','게시물 작성 테스트11'
, '게시물 작성과 관련한 열한 번째 테스트입니다.','127.0.0.1');

SELECT NUM, SUBJECT, NAME, HITCOUNT, TO_CHAR(CREATED) AS CREATED
FROM TBL_BOARD
ORDER BY NUM DESC;

COMMIT;
-->> 커밋 완료

SELECT *
FROM TBL_BOARD;

DELETE FROM TBL_BOARD WHERE NUM=1;
DELETE FROM TBL_BOARD WHERE NUM=2;
DELETE FROM TBL_BOARD WHERE NUM=10;

COMMIT;
--> 커밋 완료


SELECT NUM, SUBJECT, NAME, HITCOUNT, TO_CHAR(CREATED) AS CREATED
FROM TBL_BOARD
WHERE NUM>=1 AND NUM<=5
ORDER BY NUM DESC;

--○ 전체 내용 확인 쿼리문
SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM, DATA.*
FROM
(
SELECT NUM, NAME, SUBJECT, HITCOUNT, CREATED
FROM TBL_BOARD
) DATA;

--데이터 다시 추가
INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(12,'이영진','java003$','jin02@class3.com','게시물 작성 테스트12'
, '게시물 작성과 관련한 열 두 번째 테스트입니다.','127.0.0.1');

INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(13,'삼영진','java003$','jin03@class3.com','게시물 작성 테스트13'
, '게시물 작성과 관련한 열 세 번째 테스트입니다.','127.0.0.1');

INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(14,'사영진','java003$','jin04@class3.com','게시물 작성 테스트14'
, '게시물 작성과 관련한 열 네 번째 테스트입니다.','127.0.0.1');

INSERT INTO TBL_BOARD(NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR)
VALUES(15,'오영진','java003$','jin05@class3.com','게시물 작성 테스트15'
, '게시물 작성과 관련한 열 다섯 번째 테스트입니다.','127.0.0.1');

--○ 전체 내용 확인 쿼리문
SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM, DATA.*
FROM
(
SELECT NUM, NAME, SUBJECT, HITCOUNT, CREATED
FROM TBL_BOARD
) DATA;

SELECT *
FROM
(
  SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM, DATA.*
  FROM
  (
    SELECT NUM, NAME, SUBJECT, HITCOUNT
          , TO_CHAR(CREATED,'YYYY-MM-DD') AS CREATED
    FROM TBL_BOARD
    --WHERE SUBJECT LIKE '%게시물%'
    --WHERE NAME LIKE '%김진호%'
    WHERE CONTENT LIKE '%번째%'
    ORDER BY NUM DESC
  ) DATA
)
WHERE RNUM >= 1 AND RNUM <=10;

-- 한줄 구성
SELECT * FROM (SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM, DATA.* FROM  (SELECT NUM, NAME, SUBJECT, HITCOUNT, TO_CHAR(CREATED,'YYYY-MM-DD') AS CREATED FROM TBL_BOARD) DATA)WHERE RNUM >= 1 AND RNUM <=10;

--○ 조회 횟수 증가 쿼리문 구성
UPDATE TBL_BOARD
SET HITCOUNT = NVL(HITCOUNT,0)+1
WHERE NUM=11;
--한줄 구성
UPDATE TBL_BOARD SET HITCOUNT = NVL(HITCOUNT,0)+1 WHERE NUM=11;


--○ 특정 게시물 내용 조회 쿼리문 구성
SELECT NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR, HITCOUNT, TO_CHAR(CREATED,'YYY-MM-DD HH24:MI:SS') AS CREATED
FROM TBL_BOARD
WHERE NUM=11;
--한줄 구성
SELECT NUM, NAME, PWD, EMAIL, SUBJECT, CONTENT, IPADDR, HITCOUNT, TO_CHAR(CREATED,'YYY-MM-DD HH24:MI:SS') AS CREATED FROM TBL_BOARD WHERE NUM=11;


--○특정 게시물 삭제 쿼리문 구성
DELETE
FROM TBL_BOARD
WHERE NUM=16; 
-- 한줄 구성
DELETE FROM TBL_BOARD WHERE NUM=17; 


--○특정 게시물 수정 쿼리문 구성
UPDATE TBL_BOARD
SET NAME='백영진', PWD='1234',EMAIL='jin100@class3.com', SUBJECT='수정한다', CONTENT='수정수정수정'
WHERE NUM=11;
-- 한줄 구성
UPDATE TBL_BOARD SET NAME='백영진', PWD='1234',EMAIL='jin100@class3.com', SUBJECT='수정한다', CONTENT='수정수정수정' WHERE NUM=11;

SELECT NVL(MAX(NUM),0) AS NUM FROM TBL_BOARD;

ROLLBACK;

COMMIT;

-- 검색 쿼리
SELECT *
FROM
(
  SELECT ROW_NUMBER() OVER(ORDER BY NUM ASC) AS RNUM, DATA.*
  FROM
  (
    SELECT NUM, NAME, SUBJECT, HITCOUNT
          , TO_CHAR(CREATED,'YYYY-MM-DD') AS CREATED
    FROM TBL_BOARD
    --WHERE SUBJECT LIKE '%게시물%'
    --WHERE NAME LIKE '%김진호%'
   ) DATA
  ORDER BY RNUM DESC
)
WHERE RNUM >=1 AND NUM <=30;
-- 한줄 구성
SELECT * FROM (SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM, DATA.* FROM (SELECT NUM, NAME, SUBJECT, HITCOUNT, TO_CHAR(CREATED,'YYYY-MM-DD') AS CREATED FROM TBL_BOARD WHERE CONTENT LIKE '%번째%' ORDER BY NUM DESC) DATA) WHERE RNUM >= 1 AND RNUM <=10;
--WHERE SUBJECT LIKE '%게시물%' --WHERE NAME LIKE '%김진호%'



SELECT * FROM ( SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM, DATA.* FROM ( SELECT NUM, NAME,SUBJECT, HITCOUNT, TO_CHAR(CREATED,'YYYY-MM-DD')  AS CREATED FROM TBL_BOARD WHERE subject LIKE '%%'  ORDER BY NUM DESC) DATA) WHERE RNUM >= 1 AND RNUM <=10 ;



-- 이전글 쿼리;
SELECT NUM, SUBJECT, NAME, HITCOUNT, CREATED FROM TBL_BOARD WHERE NUM IN ((SELECT MAX(num) FROM TBL_BOARD  WHERE num < 22));
COMMIT;

-- 다음글 쿼리
SELECT * FROM TBL_BOARD WHERE NUM IN ((SELECT MAX(num) FROM TBL_BOARD  WHERE num > 22));

-- 게시글 번호 출력
SELECT *
FROM
(
  SELECT ROW_NUMBER() OVER(ORDER BY NUM DESC) AS RNUM,DATA.* 
  FROM 
  (
    SELECT NUM,NAME,SUBJECT,HITCOUNT,TO_CHAR(CREATED,'YYYY-MM-DD') AS CREATED 
    FROM TBL_BOARD 
    WHERE '%%' LIKE '%%'
  )DATA
) 
WHERE RNUM>=1 AND RNUM<=10;