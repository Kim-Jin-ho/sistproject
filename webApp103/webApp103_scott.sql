SELECT USER
FROM DUAL;
-->> SCOTT

DROP TABLE TBL_MEMBER PURGE;
-->> 삭제 완료

SELECT *
FROM TAB;


PURGE RECYCLEBIN;

SELECT *
FROM TAB;

--------------------------------------------------------------------------------

--○ 실습 테이블 (TBL_MEMBER)
CREATE TABLE TBL_MEMBER
(
  SID NUMBER
, NAME VARCHAR2(30)
, TEL VARCHAR2(40)
, CONSTRAINT MEMBER_SID_PK PRIMARY KEY(SID)
);

DROP SEQUENCE MEMBERSEQ;
--○ 시퀀스 생성
CREATE SEQUENCE MEMBERSEQ NOCACHE;
-->> 생성 완료

--○데이터 입력 쿼리문 구성
INSERT INTO TBL_MEMBER(SID, NAME, TEL)
VALUES(MEMBERSEQ.NEXTVAL,'김현태','010-1111-1111');

--> 한줄 구성
INSERT INTO TBL_MEMBER(SID, NAME, TEL)VALUES(MEMBERSEQ.NEXTVAL,'김현태','010-1111-1111');
-->> 삽입 되었습니다.

SELECT SID, NAME, TEL FROM TBL_MEMBER;

--○ 샘플 데이터 입력 (기본 페이지에서 정보를 얻어올 수 있는지 확인)
INSERT INTO TBL_MEMBER(SID, NAME, TEL)VALUES(MEMBERSEQ.NEXTVAL,'김현태','010-1111-1111');
-->> 삽입 완료

COMMIT;
-----------------------------------------------------------------------------------------------------------------

SELECT *
FROM TBL_SCORE;

DROP TABLE TBL_SCORE;

CREATE TABLE TBL_SCORE
( SID     NUMBER
, NAME    VARCHAR2(20)
, KOR     NUMBER
, ENG     NUMBER
, MAT     NUMBER
);

DROP SEQUENCE SCORESEQ;
CREATE SEQUENCE SCORESEQ NOCACHE;

COMMIT;

--- 데이터 입력
INSERT INTO TBL_SCORE(SID,NAME,KOR,ENG,MAT)
VALUES(1,'김',10,10,10);

SELECT *
FROM TBL_SCORE;

ROLLBACK;

DELETE FROM TBL_SCORE;
COMMIT;
-- 제약 조건 삽입
ALTER TABLE TBL_SCORE ADD CONSTRAINT SCORE_SID_PK PRIMARY KEY(SID);
-- 국어 제약조건
ALTER TABLE TBL_SCORE ADD CONSTRAINT SCORE_CK_SCORE CHECK(KOR >=0 AND KOR<=100);
ALTER TABLE TBL_SCORE ADD CONSTRAINT SCORE_NN_SCORE CHECK(KOR IS NOT NULL);
-- 영어 제약 조건
ALTER TABLE TBL_SCORE ADD CONSTRAINT SCORE_CK_ENG CHECK(ENG >=0 AND ENG<=100);
ALTER TABLE TBL_SCORE ADD CONSTRAINT SCORE_NN_ENG CHECK(ENG IS NOT NULL);
-- 수학 제약 조건
ALTER TABLE TBL_SCORE ADD CONSTRAINT SCORE_CK_MAT CHECK(MAT >=0 AND MAT<=100);
ALTER TABLE TBL_SCORE ADD CONSTRAINT SCORE_NN_MAT CHECK(MAT IS NOT NULL);

-- 한줄 구성
INSERT INTO TBL_SCORE(SID,NAME,KOR,ENG,MAT)VALUES(SCORESEQ.NEXTVAL,'김진호',100,90,30);

-- 조회 쿼리문

SELECT SID, NAME, KOR, ENG, MAT, (KOR+ENG+MAT) AS TOT
          , (KOR+ENG+MAT)/3 AS AVG, RANK() OVER (ORDER BY (KOR+ENG+MAT)/3 DESC)
FROM TBL_SCORE;

-- 한줄 구성
SELECT SID, NAME, KOR, ENG, MAT, (KOR+ENG+MAT) AS TOT, TRUNC((KOR+ENG+MAT)/3,1) AS AVG, RANK() OVER (ORDER BY (KOR+ENG+MAT)/3 DESC) FROM TBL_SCORE;

SELECT *
FROM TBL_SCORE;